fib: n {
	if n < 2 {
		return n;
	}

	return fib(n - 2) + fib(n - 1);
}


start_time = clock();

test: n {
	res = n;
	res = n * 2;
    return res;
}


val = 0;

while val < 1000000 {
    res = test(val);
    if res == 2 {
    	print res;
    }
    val += 1;
}

class Brioche {}
print Brioche;

class Brunch {
  	bacon {}
  	eggs {}
}

class Scone {
  	topping: first, second {
  	  	print "scone with " + first + " and " + second;
  	}
}

scone = Scone();
scone.topping("berries", "cream");


class myClass {
	my_func {
		print "lait";
	}
}

class CoffeeMaker {
  	init: coffee {
  		self.coffee_unique = coffee;
  	}

  	get_coffee_unique {
  		print "GOT IN GETTER!!!";
  		return self.coffee_unique;
  	}

  	brew {
    	print 'Enjoy your cup of ' + self.coffee_unique;

    	-- No reusing the grounds!
    	self.coffee_unique = nil;
  	}
}

maker = CoffeeMaker("coffee and chicory");
maker.brew();

class Doughnut {
  	cook {
    	print "Dunk in the fryer.";
  	}
}

class Cruller: Doughnut {
  	finish {
    	print "Glaze with icing.";
  	}
}

cruller = Cruller();
cruller.finish();
cruller.cook();


class Rectangle {
	init: width, height {
		self.width = width;
		self.height = height;
	}

	area {
		return self.width * self.height;
	}
}


class Square: Rectangle {
	init: width {
		super(width, width);  -- Both do the same thing
		super.init(width, width);
	}
}

square = Square(10);
print square.area();

-*
	This is a multi-line comment.
	print clock() - start_time;
*-


print clock() - start_time;
